import { useState } from 'react';

import PlusIcon from '../../assets/icons/plus.svg';
import CategoryIcon from '../../assets/icons/category.svg';
import defaultPostImage from '../../assets/images/default-post.png';
import defaultAvatarImage from '../../assets/images/default-avatar.png';

// –ò–º–ø–æ—Ä—Ç —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
import { posts, users, categories } from '../../mockData/testData';

import './NewsPage.css';


function NewsPage() {
    // –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (–¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ª–∞–π–∫–Ω—É–ª –ª–∏ –æ–Ω –ø–æ—Å—Ç)
    const currentUserId = 1;

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å—Ç–æ–≤, –æ–±—ä–µ–¥–∏–Ω—è—è –¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–æ–≤ —Å –¥–∞–Ω–Ω—ã–º–∏ –∏—Ö –∞–≤—Ç–æ—Ä–æ–≤
    const [allPosts, setAllPosts] = useState(() => {
        return posts.map(post => ({
            ...post, // –∫–æ–ø–∏—Ä—É–µ–º –≤—Å–µ —Å–≤–æ–π—Å—Ç–≤–∞ –ø–æ—Å—Ç–∞
            // –ù–∞—Ö–æ–¥–∏–º –∞–≤—Ç–æ—Ä–∞ –ø–æ—Å—Ç–∞ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –¥–∞–Ω–Ω—ã–µ
            author: users.find(user => user.id === post.authorId),
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ª–∞–π–∫–Ω—É–ª –ª–∏ —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ—Å—Ç
            likes: post.likedBy.length,
            isLiked: post.likedBy.includes(currentUserId)
        }));
    });

    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –ø–æ—Å—Ç–∞
    const formatDate = (dateString) => {
        const date = new Date(dateString);
        const today = new Date();
        const isToday = date.toDateString() === today.toDateString();

        // –ï—Å–ª–∏ –ø–æ—Å—Ç —Å–æ–∑–¥–∞–Ω —Å–µ–≥–æ–¥–Ω—è, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –≤—Ä–µ–º—è
        if (isToday) {
            return date.toLocaleTimeString('ru-RU', {
                hour: '2-digit',
                minute: '2-digit'
            });
        }

        // –ò–Ω–∞—á–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∞—Ç—É
        return date.toLocaleDateString('ru-RU', {
            day: 'numeric',
            month: 'long'
        });
    };

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ª–∞–π–∫–æ–≤
    const handleLike = (postId) => {
        setAllPosts(allPosts.map(post => {
            if (post.id === postId) {
                // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∞–π–∫–æ–≤ –∏ —Å—Ç–∞—Ç—É—Å –ª–∞–π–∫–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ—Å—Ç–∞
                const newLikedBy = post.isLiked
                    ? post.likedBy.filter(id => id !== currentUserId)
                    : [...post.likedBy, currentUserId];

                return {
                    ...post,
                    likedBy: newLikedBy,
                    isLiked: !post.isLiked,
                    likes: newLikedBy.length
                };
            }
            return post;
        }));
    };

    return (
        <div className="news-page">
            <div className="news-page-main-content">
                {/* –ö–Ω–æ–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞ */}
                <button className="create-post-button">
                    <img
                        src={PlusIcon}
                        alt="Create"
                        className="create-post-icon"
                    />
                    <span>–°–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç</span>
                </button>

                {/* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –ø–æ—Å—Ç–∞–º–∏ */}
                <div className="posts-container">
                    {allPosts.map(post => (
                        <article key={post.id} className="post">
                            {/* –®–∞–ø–∫–∞ –ø–æ—Å—Ç–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –∞–≤—Ç–æ—Ä–µ */}
                            <div className="post-header">
                                <img
                                    src={post.author.avatar || defaultAvatarImage}
                                    alt="Avatar"
                                    className="author-avatar"
                                    onError={(e) => {
                                        e.target.src = defaultAvatarImage;
                                    }}
                                />
                                <div className="author-info">
                                    <div className="author-name">
                                        <span>{post.author.firstName}</span>
                                        <span>{post.author.lastName}</span>
                                    </div>
                                    <div className="post-date">
                                        {formatDate(post.createdAt)}
                                    </div>
                                </div>
                            </div>

                            {/* –¢–µ–∫—Å—Ç –ø–æ—Å—Ç–∞ */}
                            {post.text && (
                                <p className="post-text">{post.text}</p>
                            )}

                            {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ—Å—Ç–∞ –∏ –∫–Ω–æ–ø–∫–∞ –ª–∞–π–∫–∞ */}
                            {post.image && (
                                <div className="post-content">
                                    <img
                                        src={post.image || defaultPostImage}
                                        alt="Post content"
                                        className="post-image"
                                        onError={(e) => {
                                            e.target.src = defaultPostImage;
                                        }}
                                    />
                                    <div className="post-actions">
                                        <button
                                            className={`like-button ${post.isLiked ? 'liked' : ''}`}
                                            onClick={() => handleLike(post.id)}
                                        >
                                            {post.isLiked ? '‚ù§Ô∏è' : 'ü§ç'} {post.likes}
                                        </button>
                                    </div>
                                </div>
                            )}
                        </article>
                    ))}
                </div>
            </div>

            {/* –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ */}
            <div className="categories-sidebar">
                <div className="categories-header">
                    <img
                        src={CategoryIcon}
                        alt="Categories"
                        className="category-icon"
                    />
                    <h2>–ö–∞—Ç–µ–≥–æ—Ä–∏–∏</h2>
                </div>
                <div className="categories-list">
                    {categories.map(category => (
                        <div key={category} className="category-item">
                            {category}
                        </div>
                    ))}
                </div>
            </div>
        </div>
    );
}

export default NewsPage;